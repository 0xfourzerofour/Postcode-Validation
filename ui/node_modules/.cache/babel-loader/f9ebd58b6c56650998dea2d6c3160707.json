{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/joshpauline/code/Lawpath-both/lawpath-tech-test/ui/src/Components/FormDetail/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchAxios } from '../../Utils/Fetch';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst states = ['NSW', 'QLD', 'SA', 'NT', 'TAS', 'WA', 'VIC'];\n\nconst FormFields = _styled.div.withConfig({\n  displayName: \"FormDetail__FormFields\",\n  componentId: \"d7wyk7-0\"\n})([\"display:flex;flex-direction:column;input{margin-bottom:10px;}select{margin-bottom:10px;}\"]);\n\nexport default function FormDetail() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    postCode: '',\n    suburb: '',\n    state: ''\n  });\n  const [message, setMessage] = useState('');\n\n  const onChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    axios.get(`http://localhost:5000/location?q=${formData.postCode}&state=${formData.state}`).then(res => {\n      validate(res);\n    });\n  };\n\n  const validate = response => {\n    if (response != null) {\n      setMessage('valid');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Post Code\",\n          type: \"text\",\n          name: \"postCode\",\n          onChange: onChange,\n          value: formData.postCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Suburb\",\n          type: \"text\",\n          name: \"suburb\",\n          onChange: onChange,\n          value: formData.suburb\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChange,\n          name: \"state\",\n          children: states.map(state => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"state\",\n              value: state,\n              children: state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Click Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormDetail, \"TfszIBRP/jZBidCMnQPujUyAmkM=\");\n\n_c = FormDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDetail\");","map":{"version":3,"sources":["/Users/joshpauline/code/Lawpath-both/lawpath-tech-test/ui/src/Components/FormDetail/index.js"],"names":["React","useState","useEffect","fetchAxios","axios","states","FormFields","styled","div","FormDetail","formData","setFormData","postCode","suburb","state","message","setMessage","onChange","event","target","name","value","onSubmit","preventDefault","get","then","res","validate","response","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,IAArB,EAA2B,KAA3B,EAAkC,IAAlC,EAAwC,KAAxC,CAAf;;AAEA,MAAMC,UAAU,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,gGAAhB;;AAaA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,MAAM,EAAE,EAF+B;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAD,CAAxC;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMgB,QAAQ,GAAIC,KAAD,IAAW;AAC1BP,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAFxB,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,QAAQ,GAAIJ,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AACAnB,IAAAA,KAAK,CACFoB,GADH,CAEK,oCAAmCd,QAAQ,CAACE,QAAS,UAASF,QAAQ,CAACI,KAAM,EAFlF,EAIGW,IAJH,CAISC,GAAD,IAAS;AACbC,MAAAA,QAAQ,CAACD,GAAD,CAAR;AACD,KANH;AAOD,GATD;;AAWA,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpBZ,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEM,QAAhB;AAAA,8BACE,QAAC,UAAD;AAAA,gCACE;AACE,UAAA,WAAW,EAAC,WADd;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,QAAQ,EAAEL,QAJZ;AAKE,UAAA,KAAK,EAAEP,QAAQ,CAACE;AALlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,WAAW,EAAC,QADd;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,QAAQ,EAAEK,QAJZ;AAKE,UAAA,KAAK,EAAEP,QAAQ,CAACG;AALlB;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE;AAAQ,UAAA,QAAQ,EAAEI,QAAlB;AAA4B,UAAA,IAAI,EAAC,OAAjC;AAAA,oBACGZ,MAAM,CAACwB,GAAP,CAAYf,KAAD,IAAW;AACrB,gCACE;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,KAAK,EAAEA,KAA5B;AAAA,wBACGA;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoCE;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAzEuBN,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport { fetchAxios } from '../../Utils/Fetch';\nimport axios from 'axios';\n\nconst states = ['NSW', 'QLD', 'SA', 'NT', 'TAS', 'WA', 'VIC'];\n\nconst FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  input {\n    margin-bottom: 10px;\n  }\n\n  select {\n    margin-bottom: 10px;\n  }\n`;\n\nexport default function FormDetail() {\n  const [formData, setFormData] = useState({\n    postCode: '',\n    suburb: '',\n    state: '',\n  });\n\n  const [message, setMessage] = useState('');\n\n  const onChange = (event) => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .get(\n        `http://localhost:5000/location?q=${formData.postCode}&state=${formData.state}`\n      )\n      .then((res) => {\n        validate(res);\n      });\n  };\n\n  const validate = (response) => {\n    if (response != null) {\n      setMessage('valid');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <FormFields>\n          <input\n            placeholder=\"Post Code\"\n            type=\"text\"\n            name=\"postCode\"\n            onChange={onChange}\n            value={formData.postCode}\n          />\n          <input\n            placeholder=\"Suburb\"\n            type=\"text\"\n            name=\"suburb\"\n            onChange={onChange}\n            value={formData.suburb}\n          />\n          <select onChange={onChange} name=\"state\">\n            {states.map((state) => {\n              return (\n                <option name=\"state\" value={state}>\n                  {state}\n                </option>\n              );\n            })}\n          </select>\n          {/* <input\n            placeholder=\"State\"\n            type=\"text\"\n            name=\"state\"\n            onChange={onChange}\n            value={formData.state}\n          /> */}\n        </FormFields>\n        <button type=\"submit\">Click Me</button>\n      </form>\n      <p>{message}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}